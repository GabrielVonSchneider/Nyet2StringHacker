<Window x:Class="Nyet2Hacker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Nyet2Hacker"
        mc:Ignorable="d"
        Title="Nyet II String Hacker" Height="460" Width="659"
        FontFamily="Calibri" AllowDrop="True"
        DragEnter="Window_DragEnter"
        Drop="Window_Drop"
        KeyDown="Window_KeyDown"
        Focusable="False"
    >
    <Window.InputBindings>
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding DoneCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5, 0, 5, 0"/>
        </Style>
        <DataTemplate
            x:Key="LineTemplate"
            DataType="{x:Type local:LineViewModel}"
        >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock 
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Text="{Binding Index, Mode=OneWay}"
                    FontSize="11"
                    Margin="0, 0, 2, 0"
                />
                <CheckBox
                    Grid.Column="1"
                    IsChecked="{Binding Done}"
                    VerticalAlignment="Center" Grid.ColumnSpan="1" Margin="0,2"
                    Focusable="False"
                />
                <TextBlock
                    Grid.Column="2"
                    Text="{Binding OriginalText}" VerticalAlignment="Center" Margin="0,2"
                />
                <TextBlock
                    Grid.Column="3"
                    Text="{Binding TransText}" VerticalAlignment="Center"
                    HorizontalAlignment="Left" Margin="0,2"
                />
            </Grid>
        </DataTemplate>
        <ControlTemplate x:Key="XButton" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Background="#00FFFF00">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#7EFFFF00"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="Yellow"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Unfocused">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00808080"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Focused">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="Gray"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Rectangle x:Name="rectangle" StrokeThickness="1" Stroke="Gray"/>
                <Path x:Name="path" 
                    Data="M2.2893762,7.7898527 L8.8494546,2.2097653"
                    Fill="#FFF4F4F5"
                    HorizontalAlignment="Left"
                    Stretch="Fill"
                    Stroke="Black"
                    VerticalAlignment="Top"
                    StrokeThickness="2.5"
                    Margin="1, 1, 1, 1"
                />
                <Path x:Name="path1"
                    Data="M3.4311521,2.5120821 L9.8964935,7.9624157"
                    Fill="#FFF4F4F5" HorizontalAlignment="Left"
                    Stretch="Fill"
                    Stroke="Black"
                    VerticalAlignment="Top"
                    StrokeThickness="2.5"
                    Margin="1, 1, 1, 1"
                />
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    <Grid Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="150*"/>
            <ColumnDefinition Width="75*"/>
            <ColumnDefinition Width="75*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="61*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="133"/>
        </Grid.RowDefinitions>
        <DockPanel
            Name="QuestionPanel"
            Grid.Row="3"
            HorizontalAlignment="Left"
            Visibility="Collapsed"
            Width="0">
            <DockPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="80"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Margin" Value="3, 3, 3, 3"/>
                </Style>
            </DockPanel.Resources>
            <Button Visibility="Collapsed">Yes</Button>
            <Button Visibility="Collapsed">No</Button>
            <Button>Cancel</Button>
        </DockPanel>
        <RichTextBox 
            x:Name="output"
            Grid.Row="3"
            IsReadOnly="True"
            Margin="3, 3, 3, 3"
            FontFamily="Consolas"
            Grid.ColumnSpan="4"
        >
            <FlowDocument>
                <Paragraph>
                    Hello!
                    <LineBreak/>
                    This is the Nyet II string hacker.
                    You can use it to modify all text in the
                    game "Nyet II".
                    <LineBreak/>
                    To start editing, drag and drop NYET2.OVL on the window.
                    <LineBreak/>
                    If you've already saved a project file,
                    you can open that using the same method.
                </Paragraph>
            </FlowDocument>
        </RichTextBox>
        <ListBox
            Name="LineList"
            ItemsSource="{Binding Lines}"
            SelectedIndex="{Binding SelectedIndex}"
            Grid.ColumnSpan="4"
            ItemTemplate="{StaticResource LineTemplate}"
            HorizontalContentAlignment="Stretch"
            FontFamily="Consolas"
            KeyDown="LineList_KeyDown"
        />
        <DockPanel
            Name="SearchPanel"
            Grid.Row="1"
            Margin="2, 2, 2, 2"
            HorizontalAlignment="Stretch"
            Grid.ColumnSpan="4"
        >
            <Button
                Name="ExitSearchButton"
                FocusVisualStyle="{x:Null}"
                Height="15"
                Width="15"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Template="{DynamicResource XButton}"
                Margin="1, 1, 1, 1"
                Click="ExitSearchButton_Click"
                ToolTip="Close Search Bar (Esc)"
                Focusable="True"
            />
            <TextBox
                Name="SearchBox"
                HorizontalAlignment="Stretch"
                Width="Auto"
                Margin="1, 1, 1, 1"
                AcceptsReturn="False"
                KeyDown="SearchBox_KeyDown"
                Height="15"
            />
        </DockPanel>
        <TextBox
            Name="Editor"
            Grid.Row="2"
            Grid.Column="1"
            KeyDown="TextBox_KeyDown"
            AcceptsReturn="False"
            Text="{Binding WorkText, UpdateSourceTrigger=PropertyChanged}"
            Height="20"
            Margin="3, 3, 3, 3"
        />
        <TextBlock
            Grid.Row="2"
            Grid.Column="2"
            VerticalAlignment="Center"
            HorizontalAlignment="Right"
            Margin="0,7,4,6"
        >
            <Run Text="{Binding WorkText.Length, Mode=OneWay}"/>
            <Run Text="/"/>
            <Run Text="{Binding SelectedLine.OriginalText.Length, Mode=OneWay}"/>
        </TextBlock>
        <TextBlock
            Grid.Row="2"
            Grid.Column="3"
            VerticalAlignment="Center"
            HorizontalAlignment="Right"
            Margin="0,7,4,6"
        >
            <Run Text="{Binding DoneStrings, Mode=OneWay}"/>
            <Run Text="out of"/>
            <Run Text="{Binding TotalStrings, Mode=OneWay}"/>
            <Run Text="-"/>
            <Run Text="{Binding CompletionPercent, Mode=OneWay}"/>
            <Run Text="percent"/>
        </TextBlock>
        <CheckBox
            VerticalContentAlignment="Center"
            Grid.Row="2"
            Grid.Column="0"
            IsChecked="{Binding SelectedLine.Done}"
            Margin="3, 3, 3, 3"
        >
            <TextBlock Focusable="False">
                Is Edited
                <LineBreak/>
                (Ctrl-D)
            </TextBlock>
        </CheckBox>
    </Grid>
</Window>
