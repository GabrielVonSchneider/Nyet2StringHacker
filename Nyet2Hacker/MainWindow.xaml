<Window x:Class="Nyet2Hacker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Nyet2Hacker"
        mc:Ignorable="d"
        Title="Nyet II String Hacker" Height="460" Width="659"
        FontFamily="Calibri" AllowDrop="True"
        DragEnter="Window_DragEnter"
        Drop="Window_Drop"
        KeyDown="Window_KeyDown"
        Focusable="False"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
    >
    <Window.InputBindings>
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding DoneCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5, 0, 5, 0"/>
        </Style>
        <DataTemplate
            x:Key="LineTemplate"
            DataType="{x:Type local:LineViewModel}"
        >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock 
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Text="{Binding Index, Mode=OneWay}"
                    FontSize="11"
                    Margin="0, 0, 2, 0"
                />
                <CheckBox
                    Grid.Column="1"
                    IsChecked="{Binding Done}"
                    VerticalAlignment="Center" Grid.ColumnSpan="1" Margin="0,2"
                    Focusable="False"
                    Checked="LineCheckBoxChange"
                    Unchecked="LineCheckBoxChange"
                />
                <TextBlock
                    Grid.Column="2"
                    Text="{Binding OriginalText}" VerticalAlignment="Center" Margin="0,2"
                />
                <TextBlock
                    Grid.Column="3"
                    Text="{Binding TransText}" VerticalAlignment="Center"
                    HorizontalAlignment="Left" Margin="0,2"
                />
            </Grid>
        </DataTemplate>
        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <Border
                x:Name="grid"
                Background="#00E8FF00"
                BorderBrush="#00808080"
            >
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0:0:0.05"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                            <Storyboard>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#7E9C9C9C"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(local:PathApplicator.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pathApplicator">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF80808B"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="NotFocused"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <local:PathApplicator x:Name="pathApplicator" Fill="#FFC5C5C5"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter TargetName="pathApplicator" Property="Fill" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SaveButtonTemplate" TargetType="{x:Type local:DirtyButton}">
            <ControlTemplate.Resources>
            </ControlTemplate.Resources>
            <Border x:Name="border" Background="Transparent">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="Dirtyness">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0:0:0.05"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(local:PathApplicator.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pathApplicator">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="DirtyHover">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(local:PathApplicator.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pathApplicator">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF830000"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFD8D8D8"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="CleanHover">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFD8D8D8"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(local:PathApplicator.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pathApplicator">
                                    <EasingColorKeyFrame KeyTime="0" Value="Black"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Dirty">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(local:PathApplicator.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pathApplicator">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFA80000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="NotDirty"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <local:PathApplicator x:Name="pathApplicator" Fill="#FFBBBBBB"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter TargetName="pathApplicator" Property="Fill" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="215*"/>
            <ColumnDefinition Width="79*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="88*"/>
            <ColumnDefinition Width="147*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="61*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="133"/>
        </Grid.RowDefinitions>
        <DockPanel
            Name="QuestionPanel"
            Grid.Row="3"
            HorizontalAlignment="Left"
            Visibility="Collapsed"
            Width="0">
            <DockPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="80"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Margin" Value="3, 3, 3, 3"/>
                </Style>
            </DockPanel.Resources>
            <Button Visibility="Collapsed">Yes</Button>
            <Button Visibility="Collapsed">No</Button>
            <Button>Cancel</Button>
        </DockPanel>
        <RichTextBox 
            x:Name="Output"
            Grid.Row="3"
            IsReadOnly="True"
            Margin="3, 3, 3, 3"
            FontFamily="Consolas"
            Grid.ColumnSpan="7"
        >
            <FlowDocument>
                <Paragraph>
                    Hello!
                    <LineBreak/>
                    This is the Nyet II string hacker.
                    You can use it to modify all text in the
                    game "Nyet II".
                    <LineBreak/>
                    To start editing, drag and drop NYET2.OVL on the window.
                    <LineBreak/>
                    If you've already saved a project file,
                    you can open that using the same method.
                </Paragraph>
            </FlowDocument>
        </RichTextBox>
        <ListBox
            Name="LineList"
            ItemsSource="{Binding Lines}"
            SelectedIndex="{Binding SelectedIndex}"
            Grid.ColumnSpan="7"
            ItemTemplate="{StaticResource LineTemplate}"
            HorizontalContentAlignment="Stretch"
            FontFamily="Consolas"
            KeyDown="LineList_KeyDown"
        />
        <DockPanel
            Name="SearchPanel"
            Grid.Row="1"
            Margin="2, 2, 2, 2"
            HorizontalAlignment="Stretch"
            Grid.ColumnSpan="7"
        >
            <Button
                Name="ExitSearchButton"
                FocusVisualStyle="{x:Null}"
                Height="15"
                Width="15"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Template="{StaticResource ButtonTemplate}"
                Margin="1, 1, 1, 1"
                Click="ExitSearchButton_Click"
                ToolTip="Close Search Bar (Esc)"
                Focusable="False"
            >
                <Path
                    x:Name="ExitSearchButtonPath"
                    Stretch="Uniform"
                    Margin="3, 3, 3, 3"
                    Data="F1 M 282.727,236L 382.818,135.909C 395.059,123.668 395.059,103.746 382.818,91.4246L 360.575,69.1821C 348.254,56.9408 328.412,56.9408 316.091,69.1821L 216,169.273L 115.909,69.1821C 103.668,56.9408 83.7459,56.9408 71.4245,69.1821L 49.1822,91.4246C 36.9409,103.746 36.9409,123.668 49.1822,135.909L 149.273,236L 49.1822,336.091C 36.9409,348.332 36.9409,368.254 49.1822,380.575L 71.4245,402.818C 83.7459,415.059 103.668,415.059 115.909,402.818L 216,302.727L 316.091,402.818C 328.332,415.059 348.254,415.059 360.575,402.818L 382.818,380.575C 395.059,368.254 395.059,348.412 382.818,336.091L 282.727,236 Z "
                />
            </Button>
            <TextBox
                Name="SearchBox"
                HorizontalAlignment="Stretch"
                Width="Auto"
                Margin="1, 1, 1, 1"
                AcceptsReturn="False"
                KeyDown="SearchBox_KeyDown"
                Height="16"
                VerticalContentAlignment="Center"
            />
        </DockPanel>
        <TextBox
            Name="Editor"
            Grid.Row="2"
            Grid.Column="1"
            KeyDown="TextBox_KeyDown"
            AcceptsReturn="False"
            Text="{Binding WorkText, UpdateSourceTrigger=PropertyChanged}"
            Margin="3,0,3,0"
            Grid.ColumnSpan="2"
            Height="20"
            VerticalAlignment="Center"
            VerticalContentAlignment="Center"
        />
        <TextBlock
            Grid.Row="2"
            Grid.Column="5"
            VerticalAlignment="Center"
            HorizontalAlignment="Right"
            Margin="5, 5, 5, 5"
            ToolTip="Length of modified text / maximum length"
        >
            <Run Text="{Binding WorkText.Length, Mode=OneWay, FallbackValue=?}"/>
            <Run Text="/"/>
            <Run Text="{Binding SelectedLine.OriginalText.Length, Mode=OneWay, FallbackValue=?}"/>
        </TextBlock>
        <TextBlock
            Grid.Row="2"
            Grid.Column="6"
            VerticalAlignment="Center"
            HorizontalAlignment="Right"
            Margin="5, 5, 5, 5"
        >
            <Run
                Text="{Binding DoneStrings, Mode=OneWay, FallbackValue=0}"/><Run
                Text=" out of "/><Run
                Text="{Binding TotalStrings, Mode=OneWay, FallbackValue=0}"/><Run
                Text=" - "/><Run Text="{Binding CompletionPercent, Mode=OneWay, FallbackValue=?}"/><Run
                Text="%"/>
        </TextBlock>
        <CheckBox
            VerticalContentAlignment="Center"
            Grid.Row="2"
            Grid.Column="0"
            IsChecked="{Binding SelectedLine.Done}"
            Margin="3, 3, 3, 3"
        >
            <TextBlock Focusable="False">
                Is Edited
                <LineBreak/>
                (Ctrl-D)
            </TextBlock>
        </CheckBox>
        <Button
            Name="CommitButton"
            Grid.Column="3"
            Grid.Row="2" 
            Template="{DynamicResource ButtonTemplate}"
            Focusable="False"
            ToolTip="Commit Line (Enter)"
            IsEnabled="{Binding CanCommit}"
            Click="CommitButton_Click"
            Height="20"
            Width="20"
        >
            <Path
                x:Name="UpArrow"
                Stretch="Uniform"
                Margin="3, 3, 3, 3"
                Data="F1 M 29.263,292.526L 7.02072,270.364C -2.34024,260.923 -2.34024,245.722 7.02072,236.441L 201.361,42.0207C 210.722,32.6598 225.923,32.6598 235.284,42.0207L 429.544,236.361C 438.985,245.722 438.985,260.923 429.544,270.284L 407.382,292.446C 397.861,301.967 382.339,301.727 373.058,292.046L 258.327,171.634L 258.327,459.104C 258.327,472.385 247.685,483.106 234.324,483.106L 202.321,483.106C 189.039,483.106 178.318,472.385 178.318,459.104L 178.318,171.634L 63.5065,292.126C 54.2256,301.967 38.704,302.127 29.263,292.526 Z "
            />
        </Button>
        <local:DirtyButton
            x:Name="SaveButton"
            Grid.Column="4"
            Dirty="{Binding Dirty}"
            Grid.Row="2"
            Width="20" 
            Height="20"
            Template="{DynamicResource SaveButtonTemplate}"
            IsEnabled="{Binding Loaded}"
            Click="SaveButton_Click"
        >
            <Button.ToolTip>
                <TextBlock>
                    Save project file (Ctrl-S).
                    Ctrl-Shift-S is "save as",
                    Ctrl-E exports back to .ovl.
                </TextBlock>
            </Button.ToolTip>
            <Path
                Data="F1 M 433.919,130.884L 350.07,47.0354C 341.029,37.9945 328.868,32.954 316.066,32.954L 47.959,32.954C 21.4762,32.954 -0.0459798,54.4762 -0.0459798,80.9589L -0.0459798,432.995C -0.0459798,459.478 21.4762,481 47.959,481L 399.995,481C 426.478,481 448,459.478 448,432.995L 448,164.888C 448,152.086 442.96,139.925 433.919,130.884 Z M 271.982,80.9589L 271.982,160.967L 143.969,160.967L 143.969,80.9589L 271.982,80.9589 Z M 393.994,432.995L 53.9596,432.995C 50.6792,432.995 47.959,430.275 47.959,426.994L 47.959,86.9595C 47.959,83.6792 50.6792,80.9589 53.9596,80.9589L 95.9639,80.9589L 95.9639,184.97C 95.9639,198.251 106.685,208.972 119.966,208.972L 295.984,208.972C 309.266,208.972 319.987,198.251 319.987,184.97L 319.987,84.8793L 398.235,163.127C 399.355,164.247 399.995,165.768 399.995,167.368L 399.995,426.994C 399.995,430.275 397.275,432.995 393.994,432.995 Z M 223.977,232.975C 175.412,232.975 135.968,272.419 135.968,320.984C 135.968,369.549 175.412,408.993 223.977,408.993C 272.542,408.993 311.986,369.549 311.986,320.984C 311.986,272.419 272.542,232.975 223.977,232.975 Z M 223.977,360.988C 201.895,360.988 183.973,343.066 183.973,320.984C 183.973,298.901 201.895,280.979 223.977,280.979C 246.059,280.979 263.981,298.901 263.981,320.984C 263.981,343.066 246.059,360.988 223.977,360.988 Z "
                x:Name="SaveButtonPath"
                Stretch="Uniform"
                Margin="3, 3, 3, 3"
            />
        </local:DirtyButton>
    </Grid>
</Window>
